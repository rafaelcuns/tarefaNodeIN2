// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id          Int          @id @default(autoincrement())
  nome        String
  email       String       @unique
  senha       String
  foto        String
  posts       Post[]
  comentarios Comentario[]
  likes       Like[]
}

model Post {
  id          Int          @id @default(autoincrement())
  titulo      String
  conteudo    String
  criado_em   DateTime
  id_usuario  Int
  usuario     Usuario      @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  comentarios Comentario[]
  likes       Like[]
}

model Comentario {
  id         Int      @id @default(autoincrement())
  criado_em  DateTime
  id_usuario Int
  id_post    Int
  usuario    Usuario  @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  post       Post     @relation(fields: [id_post], references: [id], onDelete: Cascade)
  likes      Like[]
}

model Like {
  id            Int        @id @default(autoincrement())
  criado_em     DateTime
  id_usuario    Int
  id_post       Int
  id_comentario Int
  usuario       Usuario    @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
  post          Post       @relation(fields: [id_post], references: [id], onDelete: Cascade)
  comentario    Comentario @relation(fields: [id_comentario], references: [id], onDelete: Cascade)
}
